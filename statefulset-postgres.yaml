apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-statefulset
  namespace: standard
  labels:
    app: postgres
spec:
  serviceName: "postgres-service"
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: db
          image: postgres:12.0-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USER
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: POSTGRES_HOST_AUTH_METHOD
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_HOST_AUTH_METHOD
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts: #volume mounted to the container using PVC
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes:
          - ReadWriteOnce #pour que plusieurs pods ecrivent dessus
        storageClassName: local-path # Nom de la StorageClass par defaut de Rancher
        resources:
          requests:
            storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service # doit mapper avec le host de db-py file
  namespace: standard
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432 #service port
      targetPort: 5432 #container port
  #clusterIP: None  # Headless service requis pour le StatefulSet
